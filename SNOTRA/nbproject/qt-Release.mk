#############################################################################
# Makefile for building: dist/Release/GNU-Linux-x86/SNOTRA
# Generated by qmake (2.01a) (Qt 4.8.1) on: Mon Apr 1 14:45:32 2013
# Project:  nbproject/qt-Release.pro
# Template: app
# Command: /usr/bin/qmake VPATH=. -o qttmp-Release.mk nbproject/qt-Release.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_NO_DEBUG -DQT_SQL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -Inbproject -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtSql -I/usr/include/qt4 -I. -I. -Inbproject -I.
LINK          = g++
LFLAGS        = -m64 -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -lQtSql -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = build/Release/GNU-Linux-x86/

####### Files

SOURCES       = ToolBox.cpp \
		DataBaseManager.cpp \
		main.cpp \
		WireShark.cpp \
		Game.cpp \
		NetworkGameArea.cpp \
		Frame.cpp \
		PortConnecterChoice.cpp moc_Game.cpp \
		moc_Frame.cpp \
		moc_WireShark.cpp \
		moc_ToolBox.cpp \
		moc_NetworkGameArea.cpp \
		moc_PortConnecterChoice.cpp \
		qrc_IconeItemNetwork.cpp
OBJECTS       = build/Release/GNU-Linux-x86/ToolBox.o \
		build/Release/GNU-Linux-x86/DataBaseManager.o \
		build/Release/GNU-Linux-x86/main.o \
		build/Release/GNU-Linux-x86/WireShark.o \
		build/Release/GNU-Linux-x86/Game.o \
		build/Release/GNU-Linux-x86/NetworkGameArea.o \
		build/Release/GNU-Linux-x86/Frame.o \
		build/Release/GNU-Linux-x86/PortConnecterChoice.o \
		build/Release/GNU-Linux-x86/moc_Game.o \
		build/Release/GNU-Linux-x86/moc_Frame.o \
		build/Release/GNU-Linux-x86/moc_WireShark.o \
		build/Release/GNU-Linux-x86/moc_ToolBox.o \
		build/Release/GNU-Linux-x86/moc_NetworkGameArea.o \
		build/Release/GNU-Linux-x86/moc_PortConnecterChoice.o \
		build/Release/GNU-Linux-x86/qrc_IconeItemNetwork.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		nbproject/qt-Release.pro
QMAKE_TARGET  = SNOTRA
DESTDIR       = dist/Release/GNU-Linux-x86/
TARGET        = dist/Release/GNU-Linux-x86/SNOTRA

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: qttmp-Release.mk $(TARGET)

$(TARGET): ui_Frame.h ui_PortConnecterChoice.h ui_ToolBox.h ui_NetworkGameArea.h ui_WireShark.h ui_Game.h $(OBJECTS)  
	@$(CHK_DIR_EXISTS) dist/Release/GNU-Linux-x86/ || $(MKDIR) dist/Release/GNU-Linux-x86/ 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

qttmp-Release.mk: nbproject/qt-Release.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtSql.prl \
		/usr/lib/x86_64-linux-gnu/libQtGui.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) VPATH=. -o qttmp-Release.mk nbproject/qt-Release.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtSql.prl:
/usr/lib/x86_64-linux-gnu/libQtGui.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) VPATH=. -o qttmp-Release.mk nbproject/qt-Release.pro

dist: 
	@$(CHK_DIR_EXISTS) build/Release/GNU-Linux-x86/SNOTRA1.0.0 || $(MKDIR) build/Release/GNU-Linux-x86/SNOTRA1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) build/Release/GNU-Linux-x86/SNOTRA1.0.0/ && $(COPY_FILE) --parents Game.h Frame.h WireShark.h ToolBox.h DataBaseManager.h NetworkGameArea.h PortConnecterChoice.h build/Release/GNU-Linux-x86/SNOTRA1.0.0/ && $(COPY_FILE) --parents IconeItemNetwork/IconeItemNetwork.qrc build/Release/GNU-Linux-x86/SNOTRA1.0.0/ && $(COPY_FILE) --parents ToolBox.cpp DataBaseManager.cpp main.cpp WireShark.cpp Game.cpp NetworkGameArea.cpp Frame.cpp PortConnecterChoice.cpp build/Release/GNU-Linux-x86/SNOTRA1.0.0/ && $(COPY_FILE) --parents Frame.ui PortConnecterChoice.ui ToolBox.ui NetworkGameArea.ui WireShark.ui Game.ui build/Release/GNU-Linux-x86/SNOTRA1.0.0/ && (cd `dirname build/Release/GNU-Linux-x86/SNOTRA1.0.0` && $(TAR) SNOTRA1.0.0.tar SNOTRA1.0.0 && $(COMPRESS) SNOTRA1.0.0.tar) && $(MOVE) `dirname build/Release/GNU-Linux-x86/SNOTRA1.0.0`/SNOTRA1.0.0.tar.gz . && $(DEL_FILE) -r build/Release/GNU-Linux-x86/SNOTRA1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) qttmp-Release.mk


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_Game.cpp moc_Frame.cpp moc_WireShark.cpp moc_ToolBox.cpp moc_NetworkGameArea.cpp moc_PortConnecterChoice.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_Game.cpp moc_Frame.cpp moc_WireShark.cpp moc_ToolBox.cpp moc_NetworkGameArea.cpp moc_PortConnecterChoice.cpp
moc_Game.cpp: ui_Game.h \
		ToolBox.h \
		ui_ToolBox.h \
		NetworkGameArea.h \
		ui_NetworkGameArea.h \
		PortConnecterChoice.h \
		ui_PortConnecterChoice.h \
		Game.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) Game.h -o moc_Game.cpp

moc_Frame.cpp: ui_Frame.h \
		Frame.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) Frame.h -o moc_Frame.cpp

moc_WireShark.cpp: ui_WireShark.h \
		WireShark.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) WireShark.h -o moc_WireShark.cpp

moc_ToolBox.cpp: ui_ToolBox.h \
		ToolBox.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) ToolBox.h -o moc_ToolBox.cpp

moc_NetworkGameArea.cpp: ui_NetworkGameArea.h \
		PortConnecterChoice.h \
		ui_PortConnecterChoice.h \
		NetworkGameArea.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) NetworkGameArea.h -o moc_NetworkGameArea.cpp

moc_PortConnecterChoice.cpp: ui_PortConnecterChoice.h \
		PortConnecterChoice.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) PortConnecterChoice.h -o moc_PortConnecterChoice.cpp

compiler_rcc_make_all: qrc_IconeItemNetwork.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_IconeItemNetwork.cpp
qrc_IconeItemNetwork.cpp: IconeItemNetwork/IconeItemNetwork.qrc
	/usr/bin/rcc -name IconeItemNetwork IconeItemNetwork/IconeItemNetwork.qrc -o qrc_IconeItemNetwork.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_Frame.h ui_PortConnecterChoice.h ui_ToolBox.h ui_NetworkGameArea.h ui_WireShark.h ui_Game.h
compiler_uic_clean:
	-$(DEL_FILE) ui_Frame.h ui_PortConnecterChoice.h ui_ToolBox.h ui_NetworkGameArea.h ui_WireShark.h ui_Game.h
ui_Frame.h: Frame.ui
	/usr/bin/uic-qt4 Frame.ui -o ui_Frame.h

ui_PortConnecterChoice.h: PortConnecterChoice.ui
	/usr/bin/uic-qt4 PortConnecterChoice.ui -o ui_PortConnecterChoice.h

ui_ToolBox.h: ToolBox.ui
	/usr/bin/uic-qt4 ToolBox.ui -o ui_ToolBox.h

ui_NetworkGameArea.h: NetworkGameArea.ui
	/usr/bin/uic-qt4 NetworkGameArea.ui -o ui_NetworkGameArea.h

ui_WireShark.h: WireShark.ui
	/usr/bin/uic-qt4 WireShark.ui -o ui_WireShark.h

ui_Game.h: Game.ui
	/usr/bin/uic-qt4 Game.ui -o ui_Game.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 

####### Compile

build/Release/GNU-Linux-x86/ToolBox.o: ToolBox.cpp ToolBox.h \
		ui_ToolBox.h \
		NetworkGameArea.h \
		ui_NetworkGameArea.h \
		PortConnecterChoice.h \
		ui_PortConnecterChoice.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/ToolBox.o ToolBox.cpp

build/Release/GNU-Linux-x86/DataBaseManager.o: DataBaseManager.cpp DataBaseManager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/DataBaseManager.o DataBaseManager.cpp

build/Release/GNU-Linux-x86/main.o: main.cpp Game.h \
		ui_Game.h \
		ToolBox.h \
		ui_ToolBox.h \
		NetworkGameArea.h \
		ui_NetworkGameArea.h \
		PortConnecterChoice.h \
		ui_PortConnecterChoice.h \
		WireShark.h \
		ui_WireShark.h \
		Frame.h \
		ui_Frame.h \
		DataBaseManager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/main.o main.cpp

build/Release/GNU-Linux-x86/WireShark.o: WireShark.cpp WireShark.h \
		ui_WireShark.h \
		Frame.h \
		ui_Frame.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/WireShark.o WireShark.cpp

build/Release/GNU-Linux-x86/Game.o: Game.cpp Game.h \
		ui_Game.h \
		ToolBox.h \
		ui_ToolBox.h \
		NetworkGameArea.h \
		ui_NetworkGameArea.h \
		PortConnecterChoice.h \
		ui_PortConnecterChoice.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/Game.o Game.cpp

build/Release/GNU-Linux-x86/NetworkGameArea.o: NetworkGameArea.cpp NetworkGameArea.h \
		ui_NetworkGameArea.h \
		PortConnecterChoice.h \
		ui_PortConnecterChoice.h \
		DataBaseManager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/NetworkGameArea.o NetworkGameArea.cpp

build/Release/GNU-Linux-x86/Frame.o: Frame.cpp Frame.h \
		ui_Frame.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/Frame.o Frame.cpp

build/Release/GNU-Linux-x86/PortConnecterChoice.o: PortConnecterChoice.cpp PortConnecterChoice.h \
		ui_PortConnecterChoice.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/PortConnecterChoice.o PortConnecterChoice.cpp

build/Release/GNU-Linux-x86/moc_Game.o: moc_Game.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/moc_Game.o moc_Game.cpp

build/Release/GNU-Linux-x86/moc_Frame.o: moc_Frame.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/moc_Frame.o moc_Frame.cpp

build/Release/GNU-Linux-x86/moc_WireShark.o: moc_WireShark.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/moc_WireShark.o moc_WireShark.cpp

build/Release/GNU-Linux-x86/moc_ToolBox.o: moc_ToolBox.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/moc_ToolBox.o moc_ToolBox.cpp

build/Release/GNU-Linux-x86/moc_NetworkGameArea.o: moc_NetworkGameArea.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/moc_NetworkGameArea.o moc_NetworkGameArea.cpp

build/Release/GNU-Linux-x86/moc_PortConnecterChoice.o: moc_PortConnecterChoice.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/moc_PortConnecterChoice.o moc_PortConnecterChoice.cpp

build/Release/GNU-Linux-x86/qrc_IconeItemNetwork.o: qrc_IconeItemNetwork.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/qrc_IconeItemNetwork.o qrc_IconeItemNetwork.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

